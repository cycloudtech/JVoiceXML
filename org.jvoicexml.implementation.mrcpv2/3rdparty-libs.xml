<project name="MRCPv2 IP - 3rd party libraries" basedir=".">
    <description>
This file contains the 3rd party libary definitions, used by the MRCPv2 client
implementation platform.
    </description>
    <property name="jvxml.core.dir" value="../org.jvoicexml"/>
    <import file="${jvxml.core.dir}/3rdparty-libs.xml" />

	<!-- property name="cairo.release.version" value="0.1-SNAPSHOT"/ -->

	<target name="isWindows">
		<condition property="isAntRunningOnWindows">
		    <os family="windows" />
		</condition>

		<condition property="isAntNotRunningOnWindows">
			<equals arg1="${isAntRunningOnWindows}" arg2="false" />
		</condition>
	</target>
	
	
	<target name="-local-3rdparty-download-cairo-notwindows" depends="isWindows" if="isAntNotRunningOnWindows">
		
        <exec dir="." executable="sh">
            <arg line="-c mvn -d clean initialize" />
        </exec>
	</target>

	<target name="-local-3rdparty-download-cairo-windows" depends="isWindows" if="isAntRunningOnWindows">
		<!-- property name="commandsLine" value="/c mvn -D cairo-version=${cairo.release.version} clean initialize "/-->
		<property name="commandsLine" value="/c mvn clean initialize "/>

		<!-- http://stackoverflow.com/questions/1375133/how-to-detect-a-build-error-from-ant-maven-via-a-bash-script -->
	    <exec executable="cmd" dir="${basedir}" outputproperty="output"
	          failonerror="false" osfamily="windows" logError="true" resultproperty="mvn.return.code">
	        <arg line="${commandsLine}"/>
	    </exec>
		
		<echo message="${output}" />

		<fail><condition><isfailure code="${mvn.return.code}"/></condition></fail>
		
		
		<!-- exec dir="." executable="cmd">
            <arg line="/c mvn clean initialize -D cairo-version= ${cairo.release.version}" />
        </exec -->
	</target>

    <target name="-local-3rdparty-setup" depends="-3rdparty-setup,-local-3rdparty-download-cairo-notwindows,-local-3rdparty-download-cairo-windows">
        <!-- local third party libraries -->
        <property name="local-3rdparty.dir" value="3rdparty" />

        <!-- jvxml library -->
        <path id="jvxml.core.lib">
          <path location="${jvxml.core.dir}/classes"/>
          <path location="../org.jvoicexml.client/classes"/>
          <path location="../org.jvoicexml.xml/classes"/>
        </path>

        <!-- cairo client library-->
        <property name="cairo.dir"
                  value="${local-3rdparty.dir}/cairo" />
        <property name="cairo.lib.dir" value="${cairo.dir}/lib" />
        <fileset dir="${cairo.lib.dir}" id="cairo.lib">
            <include name="cairo-client-SNAPSHOT.jar" />
            <include name="cairo-rtp-SNAPSHOT.jar" />
            <include name="cairo-sip-SNAPSHOT.jar" />
        </fileset>

        <!-- mrcp4j client library-->
        <property name="mrcp4j.dir"
                  value="${local-3rdparty.dir}/mrcp4j" />
        <property name="mrcp4j.lib.dir" value="${mrcp4j.dir}/lib" />
        <fileset dir="${mrcp4j.lib.dir}" id="mrcp4j.lib">
            <include name="mrcp4j-0.2.jar" />
        </fileset>

        <!-- jainsip client library-->
        <property name="jainsip.dir"
                  value="${local-3rdparty.dir}/jainsip1.2" />
        <property name="jainsip.lib.dir" value="${jainsip.dir}/lib" />
        <fileset dir="${jainsip.lib.dir}" id="jainsip.lib">
            <include name="concurrent-1.3.4.jar" />
            <include name="jain-sip-api-1.2.jar" />
            <include name="jain-sip-ri-1.2.jar" />
            <include name="nist-sdp-1.0.jar" />
        </fileset>
    	
        <!-- zanzibar client library-->
        <property name="zanzibar.dir"
                  value="${local-3rdparty.dir}/zanzibar" />
        <property name="zanzibar.lib.dir" value="${zanzibar.dir}/lib" />
        <fileset dir="${zanzibar.lib.dir}" id="zanzibar.lib">
            <include name="zanzibar-SNAPSHOT.jar" />
        </fileset>
    	
        <!-- speechcloud client library-->
        <property name="speechcloud.dir"
                  value="${local-3rdparty.dir}/speechcloud" />
        <property name="speechcloud.lib.dir" value="${speechcloud.dir}/lib" />
        <fileset dir="${speechcloud.lib.dir}" id="speechcloud.lib">
            <include name="speechcloud-client.jar" />
        </fileset>

        <!-- commons lang library-->
        <property name="commons.lang.dir"
                  value="${local-3rdparty.dir}/commons-lang2.3" />
        <property name="commons.lang.lib.dir" value="${commons.lang.dir}/lib" />
        <fileset dir="${commons.lang.lib.dir}" id="commons.lang.lib">
            <include name="commons-lang-2.3.jar" />
        </fileset>
    </target>
</project>
